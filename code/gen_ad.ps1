param( # Parameter help description
[Parameter(Mandatory = $false)]
[string]$JSONFile = ".\data\ad_schema.json"
)

function Add-ADGroup {
    param ([Parameter(Mandatory=$true)] $groupname)
    New-ADGroup -name $groupname -GroupScope Global
}

function Add-ADUser(){
    param([Parameter(Mandatory=$true)] $userObject)

    $name = $userObject.name
    $password = $userObject.password

    $firstname, $lastname = $name.split(" ")
    $username = ($firstname[0] + $lastname).ToLower()

    Try { 
        New-ADUser  -Name $name -GivenName $firstname -Surname $lastname -SamAccountName $username -UserPrincipalName $name@$Global:Domain -AccountPassword (ConvertTo-SecureString $password -AsPlainText -Force) -PassThru | Enable-ADAccount 
    }
    Catch { 
        Write-Error -Message "Could not create Active Directory account for user $name" -ErrorId NewADuser 
    }

    ForEach ( $group in $userObject.groups )  {
        try {
            Get-ADGroup -Identity "$group"
        }
        catch [Microsoft.ActiveDirectory.Management.ADIdentityNotFoundException]
        {
            Write-Warning "User $name NOT added to group $group because $group does not exist"
        }
        Add-ADGroupMember -Identity $group -Members $username
    }
}


$json = ( Get-Content $JSONFile | ConvertFrom-Json )
$Global:Domain = $json.domain
ForEach ( $group in $json.groups) {
    Add-ADGroup $group
}
ForEach ( $user in $json.users ){
    Add-ADUser $user
}
